image: docker:20.10.22
services:
  - docker:20.10.22-dind

variables:
  docker_image: '$CI_REGISTRY/cour-de-cassation/label-front:$CI_COMMIT_SHORT_SHA'

stages:
  - build
  - deploy

build_and_push_label_client:
  stage: build
  variables:
    HTTP_PROXY: $HTTP_PROXY_DEV
    HTTPS_PROXY: $HTTPS_PROXY_DEV
  script:
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - export NODE_OPTIONS=--openssl-legacy-provider # utile ?

    # To avoid rebuild existing image when adding tag to a commit
    - |
      if docker pull "$docker_image"; then
        echo "Docker image $docker_image already exist, skiping build and push."
        exit 0
      fi

    - docker build
      --build-arg http_proxy=$HTTP_PROXY
      --build-arg https_proxy=$HTTPS_PROXY
      --target label-front
      -t $docker_image .
    - docker push $docker_image
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_TAG'
  tags:
    - docker

.client_deploy_template:
  stage: deploy
  environment: $ENV
  image: alpine/ansible:2.16.1
  script:
    - mkdir /root/.ssh
    - cat $SSH_KEY > /root/.ssh/id_rsa
    - cat $KNOWN_HOSTS > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/known_hosts
    - ansible-playbook -e label_client_image=$docker_image -i ansible/inventories/$ENV.yml ansible/deploy_label_client.yml --vault-password-file=$ANSIBLE_VAULT_PASS
  tags:
    - docker

deploy_dev_client:
  variables:
    ENV: dev
  extends: .client_deploy_template
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG'
      when: on_success
  needs:
    - build_and_push_label_client

deploy_preprod_client:
  variables:
    ENV: preprod
  extends: .client_deploy_template
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
  needs:
    - deploy_dev_client

deploy_prod_client:
  variables:
    ENV: prod
  extends: .client_deploy_template
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
  needs:
    - deploy_preprod_client

